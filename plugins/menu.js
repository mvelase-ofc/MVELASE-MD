import moment from 'moment-timezone';
import fs from 'fs';
import os from 'os';
import pkg from '@whiskeysockets/baileys';
const { generateWAMessageFromContent, proto } = pkg;
import config from '../config.cjs';

// Get total memory and free memory in bytes
const totalMemoryBytes = os.totalmem();
const freeMemoryBytes = os.freemem();

// Define unit conversions
const byteToKB = 1 / 1024;
const byteToMB = byteToKB / 1024;
const byteToGB = byteToMB / 1024;

// Function to format bytes to a human-readable format
function formatBytes(bytes) {
  if (bytes >= Math.pow(1024, 3)) {
    return (bytes * byteToGB).toFixed(2) + ' GB';
  } else if (bytes >= Math.pow(1024, 2)) {
    return (bytes * byteToMB).toFixed(2) + ' MB';
  } else if (bytes >= 1024) {
    return (bytes * byteToKB).toFixed(2) + ' KB';
  } else {
    return bytes.toFixed(2) + ' bytes';
  }
}

// Bot Process Time
const uptime = process.uptime();
const day = Math.floor(uptime / (24 * 3600)); // Calculate days
const hours = Math.floor((uptime % (24 * 3600)) / 3600); // Calculate hours
const minutes = Math.floor((uptime % 3600) / 60); // Calculate minutes
const seconds = Math.floor(uptime % 60); // Calculate seconds

// Uptime
const uptimeMessage = `*…™ ·¥Ä·¥ç ·¥Ä ü…™·¥†·¥á …¥·¥è·¥° s…™…¥·¥Ñ·¥á …¥·¥è·¥° ${day}·¥Ö ${hours} ú ${minutes}·¥ç ${seconds}s*`;
const runMessage = `*‚òÄÔ∏è ${day} ·¥Ö·¥Ä è*\n*üïê ${hours}  ú·¥è·¥ú Ä*\n*‚è∞ ${minutes} ·¥ç…™…¥·¥ú·¥õ·¥ás*\n*‚è±Ô∏è ${seconds} s·¥á·¥Ñ·¥è…¥·¥Ös*\n`;

const xtime = moment.tz("Zimbabwe/Harare").format("HH:mm:ss");
const xdate = moment.tz("Zimbabwe/Harare").format("DD/MM/YYYY");
const time2 = moment().tz("Zimbabwe/Harare").format("HH:mm:ss");
let pushwish = "";

if (time2 < "05:00:00") {
  pushwish = `…¢·¥è·¥è·¥Ö ·¥ç·¥è Ä…¥…™…¥…¢ üåÑ`;
} else if (time2 < "11:00:00") {
  pushwish = `…¢·¥è·¥è·¥Ö ·¥ç·¥è Ä…¥…™…¥…¢ üåÑ`;
} else if (time2 < "15:00:00") {
  pushwish = `…¢·¥è·¥è·¥Ö ·¥ç·¥è Ä…¥…™…¥…¢ üåÖ`;
} else if (time2 < "18:00:00") {
  pushwish = `…¢·¥è·¥è·¥Ö ·¥á·¥†·¥á…¥…™…¥…¢ üåÉ`;
} else if (time2 < "19:00:00") {
  pushwish = `…¢·¥è·¥è·¥Ö ·¥á·¥†·¥á…¥…™…¥…¢ üåÉ`;
} else {
  pushwish = `…¢·¥è·¥è·¥Ö …¥…™…¢ ú·¥õ üåå`;
}

const test = async (m, Matrix) => {
  const prefix = config.PREFIX;
  const cmd = m.body.startsWith(prefix) ? m.body.slice(prefix.length).split(' ')[0].toLowerCase() : '';
  const mode = config.MODE === 'public' ? 'public' : 'private';
  const pref = config.PREFIX;

  const validCommands = ['list', 'help', 'menu'];

  if (validCommands.includes(cmd)) {
    const str = `‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ä∑
‚îÇ‚û™‚îÇ‚Ä¢ *·¥ç·¥†·¥á ü·¥Äs·¥á-·¥ç·¥Ö*
‚îÇ‚û™‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ä∑
‚îÇ‚û™‚îÇ‚Ä¢ *·¥ò Ä·¥á∆í…™x* : *${prefix}*
‚îÇ‚û™‚îÇ‚Ä¢ * ô·¥Ä…™ ü·¥á ès* : *·¥ç·¥ú ü·¥õ…™-·¥Ö·¥á·¥†…™·¥Ñ·¥á*
‚îÇ‚û™‚îÇ‚Ä¢ *·¥è·¥°…¥·¥á Ä* : *·¥ã ú·¥ú ü·¥á·¥ã·¥Ä…¥…™ ·¥ç·¥†·¥á ü·¥Äs·¥á*
‚îÇ‚û™‚îÇ‚Ä¢ *·¥õ è·¥ò·¥á* : *…¥·¥è·¥Ö·¥á·¥äs*
‚îÇ‚û™‚îÇ‚Ä¢ *·¥ç·¥è·¥Ö·¥á* : *${mode}*
‚îÇ‚û™‚îÇ‚Ä¢ *·¥†·¥á Äs…™·¥è…¥* : *1.0.0*
‚îÇ‚ä∑‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ä∑
‚îó‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ä∑

> *·¥Ñ ú·¥á·¥Ñ·¥ã ·¥è·¥ú·¥õ ·¥ç è ·¥Ñ·¥è·¥è ü ·¥ç·¥á…¥·¥ú  ô·¥á ü·¥è·¥°.*

> *·¥Ñ·¥è·¥Ö·¥á·¥Ö  ô è ·¥ç·¥†·¥á ü·¥Äs·¥á ·¥õ·¥á·¥Ñ ú  ú·¥ú ô.*

‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚üÆ *·¥Ñ·¥è…¥·¥†·¥á Ä·¥õ·¥á Ä* ‚üØ‚îÄ‚îÄ‚îÄ‚îÄ‚ä∑
‚îÇ‚ä∑‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ä∑
‚îÇ‚úß *${prefix}·¥Ä·¥õ·¥õ·¥ò*
‚îÇ‚úß *${prefix}·¥Ä·¥õ·¥õ·¥ò2*
‚îÇ‚úß *${prefix}·¥Ä·¥õ·¥õ·¥ò3*
‚îÇ‚úß *${prefix}·¥á ô…™…¥·¥Ä Ä è*
‚îÇ‚úß *${prefix}·¥Ö ô…™…¥·¥Ä Ä è*
‚îÇ‚úß *${prefix}·¥á·¥ç·¥è·¥ä…™·¥ç…™x*
‚îÇ‚úß *${prefix}·¥ç·¥ò3*
‚îó‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ä∑
‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ä∑

‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚üÆ *·¥Ä…™* ‚üØ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ä∑
‚îÇ‚ä∑‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ä∑
‚îÇ‚úß *${prefix}·¥Ä…™*
‚îÇ‚úß *${prefix} ô·¥ú…¢*
‚îÇ‚úß *${prefix} Ä·¥á·¥ò·¥è Ä·¥õ*
‚îÇ‚úß *${prefix}…¢·¥ò·¥õ*
‚îÇ‚úß *${prefix}·¥Ö·¥Ä ü ü·¥á*
‚îÇ‚úß *${prefix} Ä·¥á·¥ç…™…¥…™*
‚îÇ‚úß *${prefix}…¢·¥á·¥ç…™…¥…™*
‚îó‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ä∑
‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ä∑

‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚üÆ *·¥õ·¥è·¥è üs* ‚üØ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ä∑
‚îÇ‚ä∑‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ä∑
‚îÇ‚úß *${prefix}·¥Ñ·¥Ä ü·¥Ñ·¥ú ü·¥Ä·¥õ·¥è Ä*
‚îÇ‚úß *${prefix}·¥õ·¥á·¥ç·¥ò·¥ç·¥Ä…™ ü*
‚îÇ‚úß *${prefix}·¥Ñ ú·¥á·¥Ñ·¥ã·¥ç·¥Ä…™ ü*
‚îÇ‚úß *${prefix}·¥õ Ä·¥õ*
‚îÇ‚úß *${prefix}·¥õ·¥õs*
‚îó‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ä∑
‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ä∑

‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚üÆ *…¢ Ä·¥è·¥ú·¥ò* ‚üØ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ä∑
‚îÇ‚ä∑‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ä∑
‚îÇ‚úß *${prefix} ü…™…¥·¥ã…¢ Ä·¥è·¥ú·¥ò*
‚îÇ‚úß *${prefix}s·¥á·¥õ·¥ò·¥ò…¢·¥Ñ*
‚îÇ‚úß *${prefix}s·¥á·¥õ…¥·¥Ä·¥ç·¥á*
‚îÇ‚úß *${prefix}s·¥á·¥õ·¥Ö·¥ás·¥Ñ*
‚îÇ‚úß *${prefix}…¢ Ä·¥è·¥ú·¥ò*
‚îÇ‚úß *${prefix}…¢·¥Ñs·¥á·¥õ·¥õ…™…¥…¢*
‚îÇ‚úß *${prefix}·¥°·¥á ü·¥Ñ·¥è·¥ç·¥á*
‚îÇ‚úß *${prefix}·¥Ä·¥Ö·¥Ö*
‚îÇ‚úß *${prefix}·¥ã…™·¥Ñ·¥ã*
‚îÇ‚úß *${prefix} ú…™·¥Ö·¥á·¥õ·¥Ä…¢*
‚îÇ‚úß *${prefix}·¥õ·¥Ä…¢·¥Ä ü ü*
‚îÇ‚úß *${prefix}·¥Ä…¥·¥õ…™ ü…™…¥·¥ã*
‚îÇ‚úß *${prefix}·¥Ä…¥·¥õ…™·¥õ·¥èx…™·¥Ñ*
‚îÇ‚úß *${prefix}·¥ò Ä·¥è·¥ç·¥è·¥õ·¥á*
‚îÇ‚úß *${prefix}·¥Ö·¥á·¥ç·¥è·¥õ·¥á*
‚îÇ‚úß *${prefix}…¢·¥á·¥õ ô…™·¥è*
‚îó‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ä∑
‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ä∑

‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚üÆ *·¥Ö·¥è·¥°…¥ ü·¥è·¥Ä·¥Ö* ‚üØ‚îÄ‚îÄ‚îÄ‚îÄ‚ä∑
‚îÇ‚ä∑‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ä∑
‚îÇ‚úß *${prefix}·¥Ä·¥ò·¥ã*
‚îÇ‚úß *${prefix}∆í·¥Ä·¥Ñ·¥á ô·¥è·¥è·¥ã*
‚îÇ‚úß *${prefix}·¥ç·¥á·¥Ö…™·¥Ä∆í…™ Ä·¥á*
‚îÇ‚úß *${prefix}·¥ò…™…¥·¥õ·¥á Ä·¥ás·¥õ·¥Ö ü*
‚îÇ‚úß *${prefix}…¢…™·¥õ·¥Ñ ü·¥è…¥·¥á*
‚îÇ‚úß *${prefix}…¢·¥Ö Ä…™·¥†·¥á*
‚îÇ‚úß *${prefix}…™…¥s·¥õ·¥Ä*
‚îÇ‚úß *${prefix} è·¥õ·¥ç·¥ò3*
‚îÇ‚úß *${prefix} è·¥õ·¥ç·¥ò4*
‚îÇ‚úß *${prefix}·¥ò ü·¥Ä è*
‚îÇ‚úß *${prefix}s·¥è…¥…¢*
‚îÇ‚úß *${prefix}·¥†…™·¥Ö·¥á·¥è*
‚îÇ‚úß *${prefix} è·¥õ·¥ç·¥ò3·¥Ö·¥è·¥Ñ*
‚îÇ‚úß *${prefix} è·¥õ·¥ç·¥ò4·¥Ö·¥è·¥Ñ*
‚îÇ‚úß *${prefix}·¥õ…™·¥õ·¥è·¥ã*
‚îó‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ä∑
‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ä∑

‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚üÆ *s·¥á·¥Ä Ä·¥Ñ ú* ‚üØ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ä∑
‚îÇ‚ä∑‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ä∑
‚îÇ‚úß *${prefix}·¥ò ü·¥Ä è*
‚îÇ‚úß *${prefix} è·¥õs*
‚îÇ‚úß *${prefix}…™·¥ç·¥Ö ô*
‚îÇ‚úß *${prefix}…¢·¥è·¥è·¥Ö ü·¥á*
‚îÇ‚úß *${prefix}…¢…™·¥ç·¥Ä…¢·¥á*
‚îÇ‚úß *${prefix}·¥ò…™…¥·¥õ·¥á Ä·¥ás·¥õ*
‚îÇ‚úß *${prefix}·¥°·¥Ä ü ü·¥ò·¥Ä·¥ò·¥á Ä*
‚îÇ‚úß *${prefix}·¥°…™·¥ã…™·¥ç·¥á·¥Ö…™·¥Ä*
‚îÇ‚úß *${prefix} è·¥õs·¥á·¥Ä Ä·¥Ñ ú*
‚îÇ‚úß *${prefix} Ä…™…¥…¢·¥õ·¥è…¥·¥á*
‚îÇ‚úß *${prefix} ü è Ä…™·¥Ñs*
‚îó‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ä∑
‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ä∑

‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚üÆ *·¥ç·¥Ä…™…¥* ‚üØ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ä∑
‚îÇ‚ä∑‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ä∑
‚îÇ‚úß *${prefix}·¥ò…™…¥…¢*
‚îÇ‚úß *${prefix}·¥Ä ü…™·¥†·¥á*
‚îÇ‚úß *${prefix}·¥è·¥°…¥·¥á Ä*
‚îÇ‚úß *${prefix}·¥ç·¥á…¥·¥ú*
‚îÇ‚úß *${prefix}…™…¥∆í·¥è ô·¥è·¥õ*
‚îó‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ä∑
‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ä∑

‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚üÆ *·¥è·¥°…¥·¥á Ä* ‚üØ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ä∑
‚îÇ‚ä∑‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ä∑
‚îÇ‚úß *${prefix}·¥ä·¥è…™…¥*
‚îÇ‚úß *${prefix} ü·¥á·¥Ä·¥†·¥á*
‚îÇ‚úß *${prefix} ô ü·¥è·¥Ñ·¥ã*
‚îÇ‚úß *${prefix}·¥ú…¥ ô ü·¥è·¥Ñ·¥ã*
‚îÇ‚úß *${prefix}s·¥á·¥õ·¥ò·¥ò ô·¥è·¥õ*
‚îÇ‚úß *${prefix}·¥Ä…¥·¥õ…™·¥Ñ·¥Ä ü ü*
‚îÇ‚úß *${prefix}s·¥á·¥õs·¥õ·¥Ä·¥õ·¥ús*
‚îÇ‚úß *${prefix}s·¥á·¥õ…¥·¥Ä·¥ç·¥á ô·¥è·¥õ*
‚îÇ‚úß *${prefix}·¥Ä·¥ú·¥õ·¥è·¥õ è·¥ò…™…¥…¢*
‚îÇ‚úß *${prefix}·¥Ä·¥ú·¥õ·¥è·¥õ è·¥ò…™…¥…¢*
‚îÇ‚úß *${prefix}·¥Ä ü·¥°·¥Ä ès·¥è…¥ ü…™…¥·¥á*
‚îÇ‚úß *${prefix}·¥Ä·¥ú·¥õ·¥è Ä·¥á·¥Ä·¥Ö*
‚îÇ‚úß *${prefix}·¥Ä·¥ú·¥õ·¥è·¥†…™·¥á·¥°*
‚îó‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ä∑
‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ä∑

‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚üÆ *s·¥õ·¥Ä ü·¥ã* ‚üØ‚îÄ‚îÄ‚îÄ‚îÄ‚ä∑
‚îÇ‚ä∑‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ä∑
‚îÇ‚úß *${prefix}·¥õ Ä·¥ú·¥á·¥Ñ·¥Ä ü ü·¥á Ä*
‚îÇ‚úß *${prefix}…™…¥s·¥õ·¥Äs·¥õ·¥Ä ü·¥ã*
‚îÇ‚úß *${prefix}…¢…™·¥õ ú·¥ú ôs·¥õ·¥Ä ü·¥ã*
‚îó‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ä∑
‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ä∑

> *·¥Ñ·¥è·¥Ö·¥á·¥Ö  ô è ·¥ç·¥†·¥á ü·¥Äs·¥á ·¥õ·¥á·¥Ñ ú  ú·¥ú ô.*

`;

    await Matrix.sendMessage(m.from, {
      image: fs.readFileSync('../media/mvelase.png'),
      caption: str,
      contextInfo: {
        mentionedJid: [m.sender],
        forwardingScore: 999,
        isForwarded: true,
        forwardedNewsletterMessageInfo: {
          newsletterJid: '120363411325763461@newsletter',
          newsletterName: "·¥ç·¥†·¥á ü·¥Äs·¥á-·¥ç·¥Ö ·¥ç·¥á…¥·¥ú",
          serverMessageId: 143
        }
      }
    }, {
      quoted: m
    });

    // Send audio after sending the menu
    await Matrix.sendMessage(m.from, {
      audio: { url: 'https://raw.githubusercontent.com/mvelase-ofc/Techsync/refs/heads/main/data-base/Techsync-autovoice/owner.m4a' },
      mimetype: 'audio/mp4',
      ptt: true
    }, { quoted: m });
  }
};

export default test;
